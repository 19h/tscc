// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`decoratorPropertyTransformer modifies property name access to goog.reflect.objectProperty, add @nocollapse to jsdoc: decorator/decorates - es3 1`] = `
"const tscc_goog_reflect_injected = goog.require(\\"goog.reflect\\");
\\"use strict\\";
exports.__esModule = true;
var tslib_1 = require(\\"tslib\\");
var adornClass = function (target) { return target; };
var adornProperty = function (target, prop) { };
var adornMethod = function (target, prop, desc) { return desc; };
var adornParameter = function (target, prop, paramIndex) { };
var A = /** @class */ (function () {
    function A() {
    }
    A.prototype.aMethod = function () {
    };
    Object.defineProperty(A.prototype, \\"anAccessor\\", {
        get: function () {
            return NaN;
        },
        set: function (v) {
        },
        enumerable: true,
        configurable: true
    });
    A.prototype.aMethodWithParams = function (param) {
    };
    tslib_1.__decorate([
        adornMethod
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aMethod\\", A.prototype));
    tslib_1.__decorate([
        adornProperty
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aProperty\\", A.prototype));
    tslib_1.__decorate([
        adornMethod
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"anAccessor\\", A.prototype));
    tslib_1.__decorate([
        tslib_1.__param(0, adornParameter)
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aMethodWithParams\\", A.prototype));
    A = tslib_1.__decorate([
        adornClass
    ], A);
    return A;
}());
\\"__tscc_export_start__\\";
{
    self[\\"tscc_global_access_name_1\\"] = (A.prototype).aMethod;
    self[\\"tscc_global_access_name_2\\"] = (A.prototype).aProperty;
    self[\\"tscc_global_access_name_3\\"] = (A.prototype).anAccessor;
    self[\\"tscc_global_access_name_4\\"] = (A.prototype).aMethodWithParams;
}
\\"__tscc_export_end__\\";
"
`;

exports[`decoratorPropertyTransformer modifies property name access to goog.reflect.objectProperty, add @nocollapse to jsdoc: decorator/decorates - es5 1`] = `
"const tscc_goog_reflect_injected = goog.require(\\"goog.reflect\\");
\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
var tslib_1 = require(\\"tslib\\");
var adornClass = function (target) { return target; };
var adornProperty = function (target, prop) { };
var adornMethod = function (target, prop, desc) { return desc; };
var adornParameter = function (target, prop, paramIndex) { };
var A = /** @class */ (function () {
    function A() {
    }
    A.prototype.aMethod = function () {
    };
    Object.defineProperty(A.prototype, \\"anAccessor\\", {
        get: function () {
            return NaN;
        },
        set: function (v) {
        },
        enumerable: true,
        configurable: true
    });
    A.prototype.aMethodWithParams = function (param) {
    };
    tslib_1.__decorate([
        adornMethod
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aMethod\\", A.prototype), null);
    tslib_1.__decorate([
        adornProperty
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aProperty\\", A.prototype), void 0);
    tslib_1.__decorate([
        adornMethod
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"anAccessor\\", A.prototype), null);
    tslib_1.__decorate([
        tslib_1.__param(0, adornParameter)
    ], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aMethodWithParams\\", A.prototype), null);
    A = tslib_1.__decorate([
        adornClass
    ], A);
    return A;
}());
\\"__tscc_export_start__\\";
{
    self[\\"tscc_global_access_name_1\\"] = (A.prototype).aMethod;
    self[\\"tscc_global_access_name_2\\"] = (A.prototype).aProperty;
    self[\\"tscc_global_access_name_3\\"] = (A.prototype).anAccessor;
    self[\\"tscc_global_access_name_4\\"] = (A.prototype).aMethodWithParams;
}
\\"__tscc_export_end__\\";
"
`;

exports[`decoratorPropertyTransformer modifies property name access to goog.reflect.objectProperty, add @nocollapse to jsdoc: decorator/decorates 1`] = `
"const tscc_goog_reflect_injected = goog.require(\\"goog.reflect\\");
\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const tslib_1 = require(\\"tslib\\");
const adornClass = (target) => target;
const adornProperty = (target, prop) => { };
const adornMethod = (target, prop, desc) => desc;
const adornParameter = (target, prop, paramIndex) => { };
let A = class A {
    aMethod() {
    }
    get anAccessor() {
        return NaN;
    }
    set anAccessor(v) {
    }
    aMethodWithParams(param) {
    }
};
tslib_1.__decorate([
    adornMethod
], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aMethod\\", A.prototype), null);
tslib_1.__decorate([
    adornProperty
], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aProperty\\", A.prototype), void 0);
tslib_1.__decorate([
    adornMethod
], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"anAccessor\\", A.prototype), null);
tslib_1.__decorate([
    tslib_1.__param(0, adornParameter)
], A.prototype, tscc_goog_reflect_injected.objectProperty(\\"aMethodWithParams\\", A.prototype), null);
A = tslib_1.__decorate([
    adornClass
], A);
\\"__tscc_export_start__\\";
{
    self[\\"tscc_global_access_name_1\\"] = (A.prototype).aMethod;
    self[\\"tscc_global_access_name_2\\"] = (A.prototype).aProperty;
    self[\\"tscc_global_access_name_3\\"] = (A.prototype).anAccessor;
    self[\\"tscc_global_access_name_4\\"] = (A.prototype).aMethodWithParams;
}
\\"__tscc_export_end__\\";
"
`;
